d=23
d+2
d*2
d**2
m=[1,23,5]
print('ho')
help
help.start()
clearPushBack()
clear
clear()
1+2
m=123
m+6
plot(1,2)
hist(1,2)
n->2
3->m
m+2
print('kfk')
m=45
m=[1,23]
m=->[12,3]
m->[12,3]
help("mean")
?mean
?mean
??mean
apropos("mean")
??mean
s = 5
m = ((1+sqrt(5))/2)**2
m
objects()
ls()
rm(s)
ls()
rm(list=objects())
m=23
rm(list=ls())
getwd()
?setwd
??setwd
q()
#### DM de NOM1 et NOM2 #Ã  remplacer par vos noms
rm(list=objects())
graphics.off()
############################
#### A COMPLETER:
grp_id = 'I' #Ã  remplacer par le nom de votre groupe (voir sur Edunao)
setwd("D:/Centrale supelec/OneDrive - CentraleSupelec/2 ème année CS/Statistiques avancées/DM/")
############################
#### A NE PAS TOUCHER:
data_poll<-read.table("pollution.txt",sep=" ",header=T,dec=".")
dict = c('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'AA', 'AB', 'AC', 'AD', 'AE', 'AF', 'AG', 'AH', 'AI', 'AJ', 'AK', 'AL', 'AM' )
set.seed(which(dict==grp_id))
idx = sample(1:length(data_poll$pollution))[1:80]
data_poll = data_poll[idx, ]
############################
#### 5.
lm1=lm(pollution ~ (T9+T12+T15+Ne9+Ne12+Ne15+Vx9+Vx12+Vx15+vpollution),data=data_poll) ;summary(lm1)
final_model = stepAIC(lm1,k=log(80),trace=0) ## critère BIC
summary(final_model)
final_model = stepAIC(lm1,k=log(80),trace=0) ## critère BIC
############################
#### 11.
## sélection du modèle
library(MASS)
final_model = stepAIC(lm1,k=log(80),trace=0) ## critère BIC
summary(final_model)
model_aic = stepAIC(lm1,direction='both',trace=1) ## critère AIC
summary(model_aic)
lm = lm(pollution ~ (T9+T12+T15+Ne9+Ne12+Ne15+Vx9+Vx12+Vx15+vpollution),data=data_poll)
anova(lm,lm1)
lm = lm(pollution ~ (T9+T12+T15+Ne9+Ne12+Ne15+Vx9+Vx12+Vx15+vpollution),data=data_poll)
############################
#### 5.
lm1=lm(pollution ~ (T9+T12+T15+Ne9+Ne12+Ne15+Vx9+Vx12+Vx15+vpollution)*vent*pluie,data=data_poll) ;summary(lm1)
anova(lm,lm1)
anova(lm1,lm)
############################
#### 5.
lm1=lm(pollution ~ (T9+T12+T15+Ne9+Ne12+Ne15+Vx9+Vx12+Vx15+vpollution)*vent*pluie,data=data_poll) ;summary(lm1)
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Ne12+Ne15+Vx9+Vx12+Vx15+vpollution)*vent,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Ne12+Ne15+Vx9+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx9+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx9+vpollution)*vent,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx9+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+Ne9+Vx9+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T12+T15+Ne9+Vx9+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx9+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx15+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx12+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx9+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx12+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne12+Vx12+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx12+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne15+Vx12+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx15+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx12+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx9+vpollution)*vent*pluie,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx9+vpollution)*vent,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx9+Vx12+vpollution)*vent,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne9+Vx9+Vx15+vpollution)*vent,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+T15+Ne12+Vx9+vpollution)*vent,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+Ne12+Vx9+vpollution)*vent,data=data_poll))
############################
#### 9.
summary(lm(pollution ~ (T9+T12+Ne12+Vx9+vpollution)*pluie,data=data_poll))
install.packages("olsrr")
############################
#### 9. ## pas encore fait
library(olsrr)
p_model = ols_step_forward_p(lm1,penter=0.5)
p_model
p_model = ols_step_forward_p(lm1,penter=.05)
p_model
summary(p_model)
ols_step_forward_p(lm1,penter=.05)
corrplot(cor(data_poll[,1:11]))
library(corrplot)
corrplot(cor(data_poll[,1:11]))
